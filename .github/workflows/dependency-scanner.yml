name: License Compliance Verification

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  issues: read
  checks: write

jobs:
  license-compliance-verification:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 
        with:
          gradle-version: '8.5'
          
      - name: give permission to gradle
        run: chmod +x gradlew

      # Generate License Report
      - name: Generate License Report
        run: |
          ./gradlew generateLicenseReport
          find build -name "*.json" -type f
          
      # Convert JSON report to compatible XML format
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Convert License Report to JUnit XML
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > license_finder_report.xml
          echo '<testsuites>' >> license_finder_report.xml
          echo '<testsuite name="License Compliance" tests="1">' >> license_finder_report.xml
          
          LICENSE_JSON="build/reports/dependency-license/index.json"
          
          if [ -f "$LICENSE_JSON" ]; then
            jq -r '.dependencies[] | "  <testcase name=\"License Check - \(.moduleName)\" classname=\"License Compliance\">
              <system-out>Module: \(.moduleName)\nLicense: \(.license)</system-out>
            </testcase>"' "$LICENSE_JSON" >> license_finder_report.xml || {
              echo "Error processing JSON file"
              cat "$LICENSE_JSON"
              exit 1
            }
          else
            echo "Error: License report JSON file not found at $LICENSE_JSON"
            find build -type f -name "*.json"
            exit 1
          fi
          
          echo '</testsuite>' >> license_finder_report.xml
          echo '</testsuites>' >> license_finder_report.xml

      # Publish Report to GitHub UI
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.2.0
        if: always()
        with:
          junit_files: "license_finder_report.xml"

      # Upload Only Specific License Reports as Artifacts
      - name: Upload License Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            build/reports/dependency-license/index.html
            build/reports/dependency-license/index.xml
            build/reports/dependency-license/index.json
            license_finder_report.xml
